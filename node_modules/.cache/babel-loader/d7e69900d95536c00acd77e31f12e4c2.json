{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport firebaseConfig from './config';\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  async register(name, email, password) {\n    const newUser = await this.auth.createUserWithEmailAndPassword(email, password);\n    this.setupUser(newUser);\n    return await newUser.user.updateProfile({\n      displayName: name\n    });\n  }\n\n  setupUser(user) {\n    // console.log(user)\n    return this.db.collection('expenses').doc(user.uid).set({\n      name: user.displayName\n    });\n  }\n\n  async login(email, password) {\n    return await this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  async logout() {\n    await this.auth.signOut();\n  }\n\n  async resetPassword(email) {\n    await this.auth.sendPasswordResetEmail(email);\n  }\n\n}\n\nconst firebase = new Firebase();\nexport default firebase;","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/firebase/firebase.js"],"names":["app","firebaseConfig","Firebase","constructor","initializeApp","auth","db","firestore","register","name","email","password","newUser","createUserWithEmailAndPassword","setupUser","user","updateProfile","displayName","collection","doc","uid","set","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","firebase"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAOC,cAAP,MAA2B,UAA3B;;AAEA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZH,IAAAA,GAAG,CAACI,aAAJ,CAAkBH,cAAlB;AACA,SAAKI,IAAL,GAAYL,GAAG,CAACK,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUN,GAAG,CAACO,SAAJ,EAAV;AACD;;AAID,QAAMC,QAAN,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,OAAO,GAAG,MAAM,KAAKP,IAAL,CAAUQ,8BAAV,CACpBH,KADoB,EAEpBC,QAFoB,CAAtB;AAKA,SAAKG,SAAL,CAAeF,OAAf;AACA,WAAO,MAAMA,OAAO,CAACG,IAAR,CAAaC,aAAb,CAA2B;AACtCC,MAAAA,WAAW,EAAER;AADyB,KAA3B,CAAb;AAGD;;AAEDK,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd;AACA,WAAO,KAAKT,EAAL,CAAQY,UAAR,CAAmB,UAAnB,EAA+BC,GAA/B,CAAmCJ,IAAI,CAACK,GAAxC,EAA6CC,GAA7C,CAAiD;AACtDZ,MAAAA,IAAI,EAAEM,IAAI,CAACE;AAD2C,KAAjD,CAAP;AAGD;;AAED,QAAMK,KAAN,CAAYZ,KAAZ,EAAmBC,QAAnB,EAA6B;AAC3B,WAAO,MAAM,KAAKN,IAAL,CAAUkB,0BAAV,CAAqCb,KAArC,EAA4CC,QAA5C,CAAb;AACD;;AAED,QAAMa,MAAN,GAAe;AACb,UAAM,KAAKnB,IAAL,CAAUoB,OAAV,EAAN;AACD;;AAED,QAAMC,aAAN,CAAoBhB,KAApB,EAA2B;AACzB,UAAM,KAAKL,IAAL,CAAUsB,sBAAV,CAAiCjB,KAAjC,CAAN;AACD;;AAtCY;;AAyCf,MAAMkB,QAAQ,GAAG,IAAI1B,QAAJ,EAAjB;AACA,eAAe0B,QAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nimport firebaseConfig from './config'\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth()\n    this.db = app.firestore()\n  }\n\n\n\n  async register(name, email, password) {\n    const newUser = await this.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    )\n\n    this.setupUser(newUser)\n    return await newUser.user.updateProfile({\n      displayName: name\n    })\n  }\n\n  setupUser(user) {\n    // console.log(user)\n    return this.db.collection('expenses').doc(user.uid).set({\n      name: user.displayName\n    })\n  }\n\n  async login(email, password) {\n    return await this.auth.signInWithEmailAndPassword(email, password)\n  }\n\n  async logout() {\n    await this.auth.signOut()\n  }\n\n  async resetPassword(email) {\n    await this.auth.sendPasswordResetEmail(email)\n  }\n}\n\nconst firebase = new Firebase()\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}