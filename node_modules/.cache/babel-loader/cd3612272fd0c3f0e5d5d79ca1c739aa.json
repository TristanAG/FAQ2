{"ast":null,"code":"import _slicedToArray from \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport firebase from '../../firebase';\n\nfunction useAuth() {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        authUser = _React$useState2[0],\n        setAuthUser = _React$useState2[1];\n\n  React.useEffect(() => {\n    //this is a listener, so we need to 'unsubscribe' once we're done with it\n    const unsubscribe = firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user)\n        setAuthUser(user);\n      } else {\n        setAuthUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return authUser;\n}\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/auth/useAuth.js"],"names":["React","firebase","useAuth","useState","authUser","setAuthUser","useEffect","unsubscribe","auth","onAuthStateChanged","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,SAASC,OAAT,GAAmB;AAAA,0BACeF,KAAK,CAACG,QAAN,CAAe,IAAf,CADf;AAAA;AAAA,QACVC,QADU;AAAA,QACAC,WADA;;AAGjBL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMC,WAAW,GAAGN,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCC,IAAI,IAAI;AAC3D,UAAIA,IAAJ,EAAU;AACR;AACAL,QAAAA,WAAW,CAACK,IAAD,CAAX;AACD,OAHD,MAGO;AACLL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAPmB,CAApB;AASA,WAAO,MAAME,WAAW,EAAxB;AACD,GAZD,EAYG,EAZH;AAcA,SAAOH,QAAP;AACD;;AAED,eAAeF,OAAf","sourcesContent":["import React from 'react'\nimport firebase from '../../firebase'\n\nfunction useAuth() {\n  const [authUser, setAuthUser] = React.useState(null)\n\n  React.useEffect(() => {\n    //this is a listener, so we need to 'unsubscribe' once we're done with it\n    const unsubscribe = firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user)\n        setAuthUser(user)\n      } else {\n        setAuthUser(null)\n      }\n    })\n\n    return () => unsubscribe()\n  }, [])\n\n  return authUser\n}\n\nexport default useAuth\n"]},"metadata":{},"sourceType":"module"}