{"ast":null,"code":"import _slicedToArray from \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/Dashboard.js\";\nimport React from 'react';\nimport useFormValidation from './auth/useFormValidation';\nimport validatePreferences from './auth/validatePreferences';\nimport { FirebaseContext } from '../firebase';\n\nfunction Dashboard() {\n  const INITIAL_STATE = {\n    fact: \"...hmm?\"\n  };\n\n  const _React$useContext = React.useContext(FirebaseContext),\n        user = _React$useContext.user,\n        preferences = _React$useContext.preferences,\n        firebase = _React$useContext.firebase;\n\n  const _useFormValidation = useFormValidation(INITIAL_STATE, validatePreferences, handleUpdatePreferences),\n        handleSubmit = _useFormValidation.handleSubmit,\n        handleChange = _useFormValidation.handleChange,\n        handleBlur = _useFormValidation.handleBlur,\n        values = _useFormValidation.values,\n        errors = _useFormValidation.errors;\n\n  const _React$useState = React.useState({}),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        userPreferences = _React$useState2[0],\n        setUserPreferences = _React$useState2[1];\n\n  React.useEffect(() => {\n    if (user) {\n      const unsubscribe = initPreferences();\n    }\n  }, [user]);\n\n  function initPreferences() {\n    setUserPreferences(preferences); // const { category, amount, business, paymentMethod, description } = values\n  }\n\n  function handleUpdatePreferences() {\n    alert('hey!');\n    const fact = values.fact;\n    const userPreferences = {\n      fact: 'now im cloud firestore riiiiiick!' // if(!user) {\n      //   props.history.push('/login')\n      // } else {\n      //   const { category, amount, business, paymentMethod, description } = values\n      //\n      //   //convert amount to number here\n      //   const amountNum = parseFloat(amount, 10)\n      //\n      //   const expense = {\n      //     category,\n      //     amount: amountNum,\n      //     business,\n      //     paymentMethod,\n      //     description,\n      //     postedBy: {\n      //       id: user.uid,\n      //       name: user.displayName\n      //     },\n      //     created: Date.now(),\n      //     monthCreated: moment(Date.now()).format('MMMM'),\n      //     yearCreated: moment(Date.now()).format('YYYY'),\n      //     dayCreated: moment(Date.now()).format('D'),\n      //     actualDay: moment(Date.now()).format('dddd')\n      //   }\n      //\n      //   firebase.db.collection('expenses').add(expense)\n      //   // props.history.push(\"/\")\n      // }\n\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Home section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"has-text-grey-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Dashboard \\uD83D\\uDCC8\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, preferences.fact, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Fact\"), React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"fact\",\n    onChange: handleChange,\n    value: values.fact,\n    placeholder: \"Just a fact\",\n    autoComplete: \"off\",\n    type: \"text\" // className={errors.url && 'has-text-danger'}\n    ,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"button full-width\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Update Preferences\")))), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/Dashboard.js"],"names":["React","useFormValidation","validatePreferences","FirebaseContext","Dashboard","INITIAL_STATE","fact","useContext","user","preferences","firebase","handleUpdatePreferences","handleSubmit","handleChange","handleBlur","values","errors","useState","userPreferences","setUserPreferences","useEffect","unsubscribe","initPreferences","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport useFormValidation from './auth/useFormValidation'\nimport validatePreferences from './auth/validatePreferences'\nimport { FirebaseContext } from '../firebase'\n\nfunction Dashboard() {\n  const INITIAL_STATE = {\n    fact: \"...hmm?\"\n  }\n\n  const { user, preferences, firebase } = React.useContext(FirebaseContext)\n  const { handleSubmit, handleChange, handleBlur, values, errors } = useFormValidation(INITIAL_STATE, validatePreferences, handleUpdatePreferences)\n  const [userPreferences, setUserPreferences] = React.useState({})\n\n\n  React.useEffect(() => {\n    if (user) {\n      const unsubscribe = initPreferences()\n\n    }\n  }, [user])\n\n  function initPreferences() {\n    setUserPreferences(preferences)\n    // const { category, amount, business, paymentMethod, description } = values\n  }\n\n  function handleUpdatePreferences() {\n    alert('hey!')\n\n    const { fact } = values\n\n    const userPreferences = {\n      fact: 'now im cloud firestore riiiiiick!'\n    }\n\n    // if(!user) {\n    //   props.history.push('/login')\n    // } else {\n    //   const { category, amount, business, paymentMethod, description } = values\n    //\n    //   //convert amount to number here\n    //   const amountNum = parseFloat(amount, 10)\n    //\n    //   const expense = {\n    //     category,\n    //     amount: amountNum,\n    //     business,\n    //     paymentMethod,\n    //     description,\n    //     postedBy: {\n    //       id: user.uid,\n    //       name: user.displayName\n    //     },\n    //     created: Date.now(),\n    //     monthCreated: moment(Date.now()).format('MMMM'),\n    //     yearCreated: moment(Date.now()).format('YYYY'),\n    //     dayCreated: moment(Date.now()).format('D'),\n    //     actualDay: moment(Date.now()).format('dddd')\n    //   }\n    //\n    //   firebase.db.collection('expenses').add(expense)\n    //   // props.history.push(\"/\")\n    // }\n  }\n\n  return (\n    <div className=\"Home section\">\n      <div className=\"container\">\n        <h3 className=\"has-text-grey-light\">Dashboard 📈</h3>\n      </div>\n      <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n              <div className=\"content\">\n                {preferences.fact}\n                <form onSubmit={handleSubmit}>\n\n                  <div className=\"field\">\n                    <label className=\"label\">Fact</label>\n                    <div className=\"control\">\n                      <input\n                        name=\"fact\"\n                        onChange={handleChange}\n                        value={values.fact}\n                        placeholder=\"Just a fact\"\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        // className={errors.url && 'has-text-danger'}\n                        className=\"input\"\n                      />\n                      {/* {errors.fact && <p className=\"has-text-danger\">{errors.fact}</p>} */}\n                    </div>\n                  </div>\n                  <button className=\"button full-width\" type=\"submit\">Update Preferences</button>\n                </form>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"content\">\n                {/* <Expenses /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}