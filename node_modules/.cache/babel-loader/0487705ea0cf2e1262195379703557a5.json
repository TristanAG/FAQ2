{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport firebaseConfig from './config';\nconst DEFAULT_CATEGORIES = ['Groceries', 'Videogames', 'Rent'];\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  } //does register method work right now?\n\n\n  async register(name, email, password) {\n    const newUser = await this.auth.createUserWithEmailAndPassword(email, password);\n    this.setUserPrefs(newUser);\n    return await newUser.user.updateProfile({\n      displayName: name\n    });\n  } //what does this actually do?\n  //oh, it returns the displayName from the user object to render on screen when they log in\n  //not sure if it works perfectly.\n  //does this even work? it's not actually doing anything\n  // setupUser(user) {\n  //   return this.db.collection('expenses').doc(user.uid).set({\n  //     name: user.displayName\n  //   })\n  // }\n\n\n  setUserPrefs(user) {\n    console.log('in set user prefs');\n    console.log(user.user.uid);\n    console.log(user.uid);\n    const preferences = {\n      categories: DEFAULT_CATEGORIES\n    };\n    firebase.db.collection('users').doc(user.uid).set({\n      preferences\n    });\n  }\n\n  async login(email, password) {\n    return await this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  async logout() {\n    await this.auth.signOut();\n  }\n\n  async resetPassword(email) {\n    await this.auth.sendPasswordResetEmail(email);\n  }\n\n}\n\nconst firebase = new Firebase();\nexport default firebase;","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/firebase/firebase.js"],"names":["app","firebaseConfig","DEFAULT_CATEGORIES","Firebase","constructor","initializeApp","auth","db","firestore","register","name","email","password","newUser","createUserWithEmailAndPassword","setUserPrefs","user","updateProfile","displayName","console","log","uid","preferences","categories","firebase","collection","doc","set","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAOC,cAAP,MAA2B,UAA3B;AAEA,MAAMC,kBAAkB,GAAG,CACzB,WADyB,EAEzB,YAFyB,EAGzB,MAHyB,CAA3B;;AAMA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZJ,IAAAA,GAAG,CAACK,aAAJ,CAAkBJ,cAAlB;AACA,SAAKK,IAAL,GAAYN,GAAG,CAACM,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUP,GAAG,CAACQ,SAAJ,EAAV;AACD,GALY,CAOb;;;AACA,QAAMC,QAAN,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,OAAO,GAAG,MAAM,KAAKP,IAAL,CAAUQ,8BAAV,CACpBH,KADoB,EAEpBC,QAFoB,CAAtB;AAKA,SAAKG,YAAL,CAAkBF,OAAlB;AAEA,WAAO,MAAMA,OAAO,CAACG,IAAR,CAAaC,aAAb,CAA2B;AACtCC,MAAAA,WAAW,EAAER;AADyB,KAA3B,CAAb;AAGD,GAnBY,CAqBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACA,IAAL,CAAUK,GAAtB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;AAEA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,UAAU,EAAErB;AADM,KAApB;AAIAsB,IAAAA,QAAQ,CAACjB,EAAT,CAAYkB,UAAZ,CAAuB,OAAvB,EAAgCC,GAAhC,CAAoCV,IAAI,CAACK,GAAzC,EAA8CM,GAA9C,CAAkD;AAChDL,MAAAA;AADgD,KAAlD;AAGD;;AAED,QAAMM,KAAN,CAAYjB,KAAZ,EAAmBC,QAAnB,EAA6B;AAC3B,WAAO,MAAM,KAAKN,IAAL,CAAUuB,0BAAV,CAAqClB,KAArC,EAA4CC,QAA5C,CAAb;AACD;;AAED,QAAMkB,MAAN,GAAe;AACb,UAAM,KAAKxB,IAAL,CAAUyB,OAAV,EAAN;AACD;;AAED,QAAMC,aAAN,CAAoBrB,KAApB,EAA2B;AACzB,UAAM,KAAKL,IAAL,CAAU2B,sBAAV,CAAiCtB,KAAjC,CAAN;AACD;;AAvDY;;AA0Df,MAAMa,QAAQ,GAAG,IAAIrB,QAAJ,EAAjB;AACA,eAAeqB,QAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nimport firebaseConfig from './config'\n\nconst DEFAULT_CATEGORIES = [\n  'Groceries',\n  'Videogames',\n  'Rent'\n]\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth()\n    this.db = app.firestore()\n  }\n\n  //does register method work right now?\n  async register(name, email, password) {\n    const newUser = await this.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    )\n\n    this.setUserPrefs(newUser)\n\n    return await newUser.user.updateProfile({\n      displayName: name\n    })\n  }\n\n  //what does this actually do?\n  //oh, it returns the displayName from the user object to render on screen when they log in\n  //not sure if it works perfectly.\n  //does this even work? it's not actually doing anything\n  // setupUser(user) {\n  //   return this.db.collection('expenses').doc(user.uid).set({\n  //     name: user.displayName\n  //   })\n  // }\n\n  setUserPrefs(user) {\n    console.log('in set user prefs')\n    console.log(user.user.uid)\n    console.log(user.uid)\n\n    const preferences = {\n      categories: DEFAULT_CATEGORIES\n    }\n\n    firebase.db.collection('users').doc(user.uid).set({\n      preferences\n    })\n  }\n\n  async login(email, password) {\n    return await this.auth.signInWithEmailAndPassword(email, password)\n  }\n\n  async logout() {\n    await this.auth.signOut()\n  }\n\n  async resetPassword(email) {\n    await this.auth.sendPasswordResetEmail(email)\n  }\n}\n\nconst firebase = new Firebase()\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}