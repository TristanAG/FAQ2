{"ast":null,"code":"import _objectSpread from \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/Expenses.js\";\nimport React from 'react';\nimport FirebaseContext from '../firebase/context';\nimport Expense from './Expense';\n\nfunction Expenses() {\n  const _React$useContext = React.useContext(FirebaseContext),\n        firebase = _React$useContext.firebase,\n        user = _React$useContext.user;\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expenses = _React$useState2[0],\n        setExpenses = _React$useState2[1]; //something about this empty array as a dependency lets it hook into the\n  //onMount or soemthing?\n\n\n  React.useEffect(() => {\n    // const unsubscribe = getExpenses()\n    console.log('888');\n  }, []); // if (user) {\n  //   getExpenses()\n  // }\n\n  function getExpenses() {\n    if (user) {\n      firebase.db.collection('expenses').where(\"postedBy.id\", \"==\", user.uid).orderBy('created', 'desc').onSnapshot(handleSnapshot);\n    }\n  }\n\n  function handleSnapshot(snapshot) {\n    const expenses = snapshot.docs.map(doc => {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    });\n    setExpenses(expenses);\n    getTotal(expenses);\n  }\n\n  function getTotal(expenses) {\n    expenses.map(exp => {\n      alert(exp.amount);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"total:\")), React.createElement(\"div\", {\n    className: \"expenses-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, expenses.map((expense, index) => React.createElement(Expense, {\n    key: expense.id,\n    expense: expense,\n    index: index + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}\n\nexport default Expenses;","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/Expenses.js"],"names":["React","FirebaseContext","Expense","Expenses","useContext","firebase","user","useState","expenses","setExpenses","useEffect","console","log","getExpenses","db","collection","where","uid","orderBy","onSnapshot","handleSnapshot","snapshot","docs","map","doc","id","data","getTotal","exp","alert","amount","expense","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,QAAT,GAAoB;AAAA,4BACSH,KAAK,CAACI,UAAN,CAAiBH,eAAjB,CADT;AAAA,QACVI,QADU,qBACVA,QADU;AAAA,QACAC,IADA,qBACAA,IADA;;AAAA,0BAEcN,KAAK,CAACO,QAAN,CAAe,EAAf,CAFd;AAAA;AAAA,QAEXC,QAFW;AAAA,QAEDC,WAFC,wBAIlB;AACA;;;AAGAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAHD,EAGG,EAHH,EARkB,CAalB;AACA;AACA;;AAGA,WAASC,WAAT,GAAuB;AACrB,QAAIP,IAAJ,EAAU;AACRD,MAAAA,QAAQ,CAACS,EAAT,CACGC,UADH,CACc,UADd,EAEGC,KAFH,CAES,aAFT,EAEwB,IAFxB,EAE8BV,IAAI,CAACW,GAFnC,EAGGC,OAHH,CAGW,SAHX,EAGsB,MAHtB,EAIGC,UAJH,CAIcC,cAJd;AAKD;AACF;;AAED,WAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,UAAMb,QAAQ,GAAGa,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACxC;AAASC,QAAAA,EAAE,EAAED,GAAG,CAACC;AAAjB,SAAwBD,GAAG,CAACE,IAAJ,EAAxB;AACD,KAFgB,CAAjB;AAGAjB,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAmB,IAAAA,QAAQ,CAACnB,QAAD,CAAR;AACD;;AAED,WAASmB,QAAT,CAAkBnB,QAAlB,EAA4B;AAC1BA,IAAAA,QAAQ,CAACe,GAAT,CAAcK,GAAD,IAAS;AACpBC,MAAAA,KAAK,CAACD,GAAG,CAACE,MAAL,CAAL;AACD,KAFD;AAGD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QAAQ,CAACe,GAAT,CAAa,CAACQ,OAAD,EAAUC,KAAV,KACZ,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAED,OAAO,CAACN,EAAtB;AAA0B,IAAA,OAAO,EAAEM,OAAnC;AAA4C,IAAA,KAAK,EAAEC,KAAK,GAAG,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD;;AAED,eAAe7B,QAAf","sourcesContent":["import React from 'react'\nimport FirebaseContext from '../firebase/context'\nimport Expense from './Expense'\n\nfunction Expenses() {\n  const { firebase, user } = React.useContext(FirebaseContext)\n  const [expenses, setExpenses] = React.useState([])\n\n  //something about this empty array as a dependency lets it hook into the\n  //onMount or soemthing?\n\n\n  React.useEffect(() => {\n    // const unsubscribe = getExpenses()\n    console.log('888')\n  }, [])\n\n  // if (user) {\n  //   getExpenses()\n  // }\n\n\n  function getExpenses() {\n    if (user) {\n      firebase.db\n        .collection('expenses')\n        .where(\"postedBy.id\", \"==\", user.uid)\n        .orderBy('created', 'desc')\n        .onSnapshot(handleSnapshot)\n    }\n  }\n\n  function handleSnapshot(snapshot) {\n    const expenses = snapshot.docs.map(doc => {\n      return { id: doc.id, ...doc.data() }\n    })\n    setExpenses(expenses)\n    getTotal(expenses)\n  }\n\n  function getTotal(expenses) {\n    expenses.map((exp) => {\n      alert(exp.amount)\n    })\n  }\n\n  return (\n    <div>\n      <p><b>total:</b></p>\n      <div className=\"expenses-list\">\n        {expenses.map((expense, index) => (\n          <Expense key={expense.id} expense={expense} index={index + 1} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Expenses\n"]},"metadata":{},"sourceType":"module"}