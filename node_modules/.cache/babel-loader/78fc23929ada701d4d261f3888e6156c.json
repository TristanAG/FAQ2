{"ast":null,"code":"export default function validateCreateLink(values) {\n  let errors = {}; // description errors\n  // if (!values.description) {\n  //   errors.description = \"Description Required\"\n  // } else if (values.description.length < 10) {\n  //   errors.description = \"Make it over 10\"\n  // }\n  //url errors\n  // if (!values.url) {\n  //   errors.url = \"URL required\";\n  // } else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(values.url)) {\n  //   errors.url = \"URL must be valid\";\n  // }\n  //amount errors\n\n  if (values.amount) {\n    console.log(isNaN(values.amount));\n\n    if (!isNaN(values.amount)) {\n      console.log('we got a number');\n    } else {\n      console.log('not a number');\n    }\n\n    errors.amount = \"Expense amount required\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["/Users/tristangruener/Desktop/trstn/dev/cashflow_app/src/components/auth/validateCreateLink.js"],"names":["validateCreateLink","values","errors","amount","console","log","isNaN"],"mappings":"AAAA,eAAe,SAASA,kBAAT,CAA4BC,MAA5B,EAAoC;AACjD,MAAIC,MAAM,GAAG,EAAb,CADiD,CAGjD;AACE;AACA;AACA;AACA;AACA;AACF;AACE;AACA;AACA;AACA;AACA;AAEF;;AACA,MAAID,MAAM,CAACE,MAAX,EAAmB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACL,MAAM,CAACE,MAAR,CAAjB;;AAEA,QAAI,CAACG,KAAK,CAACL,MAAM,CAACE,MAAR,CAAV,EAA2B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAEDH,IAAAA,MAAM,CAACC,MAAP,GAAgB,yBAAhB;AACD;;AAED,SAAOD,MAAP;AACD","sourcesContent":["export default function validateCreateLink(values) {\n  let errors = {}\n\n  // description errors\n    // if (!values.description) {\n    //   errors.description = \"Description Required\"\n    // } else if (values.description.length < 10) {\n    //   errors.description = \"Make it over 10\"\n    // }\n  //url errors\n    // if (!values.url) {\n    //   errors.url = \"URL required\";\n    // } else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(values.url)) {\n    //   errors.url = \"URL must be valid\";\n    // }\n\n  //amount errors\n  if (values.amount) {\n    console.log(isNaN(values.amount))\n\n    if (!isNaN(values.amount)) {\n      console.log('we got a number')\n    } else {\n      console.log('not a number')\n    }\n\n    errors.amount = \"Expense amount required\"\n  }\n\n  return errors;\n}\n"]},"metadata":{},"sourceType":"module"}